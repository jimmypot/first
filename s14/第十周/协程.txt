协程，又称微线程，纤程。英文名Coroutine。一句话说明什么是线程：协程是一种用户态的轻量级线程。


高并发+高扩展性+低成本：一个CPU支持上万的协程都不是问题。所以很适合用于高并发处理。

缺点：
无法利用多核资源：greenlet协程的运行，其本质是串行的，所以它不是真正意义上的并发，因此也无法发挥CPU多核的优势
,协程需要和进程配合才能运行在多CPU上.
进行阻塞（Blocking）操作（如IO时）会阻塞掉整个程序。

协程一个标准定义，即符合什么条件就能称之为协程：
>>>必须在只有一个单线程里实现并发
>>>修改共享数据不需加锁
>>>用户程序里自己保存多个控制流的上下文栈
>>>一个协程遇到IO操作自动切换到其它协程


****父子关系
创建协程对象的方法有两个参数”greenlet(run=None, parent=None)”。参数”run”是其要调用的方法，参数”parent”定义了该协程对象的父协程，
也就是说，greenlet协程之间是可以有父子关系的。如果不设或设为空，则其父协程就是程序默认的”main”主协程。
这个”main”协程不需要用户创建，它所对应的方法就是主程序，而所有用户创建的协程都是其子孙。
大家可以把greenlet协程集看作一颗树，树的根节点就是”main”，

****异常
既然协程是存放在栈中，那一个协程要抛出异常，就会先抛到其父协程中，如果所有父协程都不捕获此异常，程序才会退出。

****协程间传递消息
在介绍生成器时，我们聊过可以使用生成器的send()方法来传递参数。greenlet也同样支持，只要在其switch()方法调用时，传入参数即可。